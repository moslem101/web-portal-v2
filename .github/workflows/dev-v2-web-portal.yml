name: Dev RUNNER web-portal-v2 CI/CD pm2 Redirect

# Dev Trigger PR
on:
  pull_request:
    branches:
      - main
    types: 
      - closed

# # RELEASE:Published Trigger 
# on:
#   release:
#     types: [published]

env:
  SERVICE_PATH: web-portal-v2
  SERVICE_NAME: dev-web-portal-v2
  SERVICE_PORT: 7110

jobs:
  # CI Phase: Build and Test
  build-and-test:
    name: CI-phase-BuildTest-pm2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: yarn install

      - name: Run Linter
        run: yarn lint

      - name: Build project
        run: yarn build

  # CD Phase: Deployment
  delivery-and-deploy:
    name: CD-phase-Deployment-pm2
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEV_PRIVATE_KEY }}

      - name: Deploy with PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          key: ${{ secrets.DEV_PRIVATE_KEY }}
          port: ${{ secrets.DEV_PORT_SSH }}
          script: |
            cd /opt/moslem101/${{ env.SERVICE_PATH }}/

            # Cek apakah service sudah ada di pm2 list
            if pm2 list | grep -q "${{ env.SERVICE_NAME }}"; then
              echo "üîÑ Service ${{ env.SERVICE_NAME }} exists. Restarting..."
              
              # Pull repository dan build project
              git add .
              git stash
              git pull origin main
              yarn install
              yarn build

              pm2 restart ${{ env.SERVICE_NAME }}
              
              # Lanjutkan ke health check
              sleep 5
              echo "Checking service ..."
              pm2 show ${{ env.SERVICE_NAME }}
            else
              echo "‚ö†Ô∏è Service ${{ env.SERVICE_NAME }} does not exist. Initializing deployment..."

              # Validasi Node.js, Yarn, PM2, dan nc
              if ! command -v node &> /dev/null; then
                echo "‚ö†Ô∏è Node.js is not installed. Installing..."
                curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
                sudo apt-get install -y nodejs
              fi
              if ! command -v yarn &> /dev/null; then
                echo "‚ö†Ô∏è Yarn is not installed. Installing..."
                npm install -g yarn
              fi
              if ! command -v pm2 &> /dev/null; then
                echo "‚ö†Ô∏è PM2 is not installed. Installing..."
                npm install -g pm2
              fi
              if ! command -v nc &> /dev/null; then
                echo "‚ö†Ô∏è Netcat (nc) is not installed. Installing..."
                sudo apt-get install -y netcat
              fi

              # Pull repository dan build project
              git add .
              git stash
              git pull origin main
              yarn install
              yarn build

              # Validasi file pm2.config.js
              cd dist
              if [ ! -f "pm2.config.js" ]; then
                echo "‚ùå File pm2.config.js not found. Exiting..."
                echo "‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è Please Add pm2.config.js Production ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è"
              fi
              echo "‚úÖ pm2.config.js file exists."

              # Ekstrak dan validasi PORT
              CONFIG_PORT=$(grep -oP '(?<="PORT":")[0-9]+' pm2.config.js | head -1)
              echo "Extracted PORT: $CONFIG_PORT"
              if [ "$CONFIG_PORT" != "${{ env.SERVICE_PORT }}" ]; then
                echo "‚ùå Configured PORT ($CONFIG_PORT) does not match expected SERVICE_PORT (${{ env.SERVICE_PORT }}). Exiting..."
              fi
              echo "‚úÖ PORT validation passed."

              # Jalankan service dengan PM2
              cd dist/
              pm2 start pm2.config.js --name ${{ env.SERVICE_NAME }}
              sleep 5
              pm2 show ${{ env.SERVICE_NAME }} 
            fi

            # Validasi Status Service
            echo "üìö Validation Service PM2 Status:"
            pm2 list

            # Health Check Service & Validasi PORT local
            echo "üîÑ Checking if port ${{ env.SERVICE_PORT }} is open on localhost..."
            if nc -zv localhost ${{ env.SERVICE_PORT }}; then
              echo "‚úÖ Remote port ${{ env.SERVICE_PORT }} is open."
            else
              echo "‚ùå Remote port ${{ env.SERVICE_PORT }} is closed. Health check failed ‚ö†Ô∏è."
            fi

      # - name: Health Check Service (Remote)
      #   run: |
      #     echo "üîÑ Checking if port ${{ env.SERVICE_PORT }} is open on remote host ${{ secrets.PRODSM101_HOST }}..."
      #     if nc -zv ${{ secrets.DEV_SSH_HOST }} ${{ env.SERVICE_PORT }}; then
      #       echo "‚úÖ Remote port ${{ env.SERVICE_PORT }} is open."
      #     else
      #       echo "‚ùå Remote port ${{ env.SERVICE_PORT }} is closed. Health check failed ‚ö†Ô∏è."
      #     fi
